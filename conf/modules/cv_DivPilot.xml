<!DOCTYPE module SYSTEM "module.dtd">

<module name="cv_DivPilot" dir="computer_vision">
  <doc>
    <description>
        Hovers the drone based on optical flow made for Linux video Devices.

        Computes Pitch- and roll attide from downward looking camera looking at a textured floor.
        - Sonar is required.
        - Controller can hold position
    </description>

    <!-- Satbilization parameters and gains -->
    <section name="VISION" prefix="VISION_">
      <define name="DIV_PGAIN"   value="10" description="Divergence proportional gain on the divergence error"/>
      <define name="DIV_IGAIN"   value="0" description="Divergence integrated gain on the summed divergence error"/>
      <define name="DESIRED_DIV" value="1" description="The desired divergence"/>
      <define name="CONTROLLER"  value="1" description="The controller switch"/>
    </section>

    <!-- Optical flow calculation parameters -->
    <section name="OPTICFLOW" prefix="OPTICFLOW_">
      <define name="AGL_ID" value="ABI_SENDER_ID" description="ABI sender id for AGL message (sonar measurement) (default: ABI_BROADCAST)"/>

      <!-- Video device parameters -->
      <define name="DEVICE" value="/dev/video2" description="The V4L2 camera device that is used for the calculations"/>
      <define name="DEVICE_SIZE" value="320,240" description="The V4L2 camera device width and height"/>
      <define name="DEVICE_BUFFERS" value="15" description="Amount of V4L2 video buffers"/>
      <define name="SUBDEV" description="The V4L2 subdevice to initialize before the main device"/>

      <!-- Camera parameters -->
      <define name="FOV_W" value="0.89360857702" description="The field of view width of the bottom camera (Defaults are from an ARDrone 2)"/>
      <define name="FOV_H" value="0.67020643276" description="The field of view height of the bottom camera (Defaults are from an ARDrone 2)"/>
      <define name="FX" value="343.1211" description="Field in the x direction of the camera (Defaults are from an ARDrone 2)"/>
      <define name="FY" value="348.5053" description="Field in the y direction of the camera (Defaults are from an ARDrone 2)"/>

      <!-- Lucas Kanade optical flow calculation parameters -->
      <define name="MAX_TRACK_CORNERS" value="25" description="The maximum amount of corners the Lucas Kanade algorithm is tracking between two frames"/>
      <define name="WINDOW_SIZE" value="10" description="Window size used in Lucas Kanade algorithm"/>
      <define name="SUBPIXEL_FACTOR" value="10" description="Amount of subpixels per pixel, used for more precise (subpixel) calculations of the flow"/>
      <define name="MAX_ITERATIONS" value="10" description="Maximum number of iterations the Lucas Kanade algorithm should take"/>
      <define name="THRESHOLD_VEC" value="2" description="TThreshold in subpixels when the iterations of Lucas Kanade should stop"/>

      <!-- FAST9 corner detection parameters -->
      <define name="FAST9_ADAPTIVE" value="TRUE" description="Whether we should use and adapative FAST9 crner detection threshold"/>
      <define name="FAST9_THRESHOLD" value="20" description="FAST9 default threshold"/>
      <define name="FAST9_MIN_DISTANCE" value="10" description="The amount of pixels between corners that should be detected"/>
	  <define name="SNAPSHOT" value="FALSE"/>      
    </section>
  </doc>

  <settings>
	  <dl_settings NAME="DivPilot landing">
      <!-- Satabilization loop parameters and gains -->
      <dl_settings name="DivPilot_land">
        <dl_setting var="DivPilot_landing.div_pgain" module="computer_vision/opticflow_module" min="0" step="1" max="100" shortname="kp_div" param="VISION_DIV_PGAIN"/>
        <dl_setting var="DivPilot_landing.div_igain" module="computer_vision/opticflow_module" min="0" step="1" max="100" shortname="ki_div" param="VISION_DIV_IGAIN"/>
        <dl_setting var="DivPilot_landing.desired_div" module="computer_vision/opticflow_module" min="-20" step="0.1" max="20" shortname="desired_div" param="VISION_DESIRED_DIV"/>
        <dl_setting var="DivPilot_landing.controller" module="computer_vision/opticflow_module" min="0" step="1" max="2" shortname="kp_div" param="VISION_CONTROLLER"/>        
      </dl_settings>

      <!-- Optical flow calculations parameters for Lucas Kanade and FAST9 -->
      <dl_settings name="vision_calc">
        <dl_setting var="opticflow.max_track_corners" module="computer_vision/opticflow_module" min="0" step="1" max="500" shortname="max_trck_corners" param="OPTICFLOW_MAX_TRACK_CORNERS"/>
        <dl_setting var="opticflow.window_size" module="computer_vision/opticflow_module" min="0" step="1" max="500" shortname="window_size" param="OPTICFLOW_WINDOW_SIZE"/>
        <dl_setting var="opticflow.subpixel_factor" module="computer_vision/opticflow_module" min="0" step="1" max="100" shortname="subpixel_factor" param="OPTICFLOW_SUBPIXEL_FACTOR"/>
        <dl_setting var="opticflow.max_iterations" module="computer_vision/opticflow_module" min="0" step="1" max="100" shortname="max_iterations" param="OPTICFLOW_MAX_ITERATIONS"/>
        <dl_setting var="opticflow.threshold_vec" module="computer_vision/opticflow_module" min="0" step="1" max="100" shortname="threshold_vec" param="OPTICFLOW_THRESHOLD_VEC"/>
        
        <dl_setting var="snapshot" module="computer_vision/opticflow_module" min="0" step="1" max="1" shortname="snapshot" param="OPTICFLOW_SNAPSHOT"/>
	<dl_setting var="w_n" module="computer_vision/opticflow_module" min="0" step="1" max="20" shortname="w_n" param="OPTICFLOW_W_N"/>
        	
        <dl_setting var="opticflow.fast9_adaptive" module="computer_vision/opticflow_module" min="0" step="1" max="1" shortname="fast9_adaptive" param="OPTICFLOW_FAST9_ADAPTIVE"/>
        <dl_setting var="opticflow.fast9_threshold" module="computer_vision/opticflow_module" min="0" step="1" max="255" shortname="fast9_threshold" param="OPTICFLOW_FAST9_THRESHOLD"/>
        <dl_setting var="opticflow.fast9_min_distance" module="computer_vision/opticflow_module" min="0" step="1" max="500" shortname="fast9_min_distance" param="OPTICFLOW_FAST9_MIN_DISTANCE"/>
      </dl_settings>
    </dl_settings>
  </settings>

  <header>
    <file name="opticflow_module.h"/>
  </header>

  <init fun="opticflow_module_init()"/>
  <periodic fun="opticflow_module_run()" start="opticflow_module_start()" stop="opticflow_module_stop()" autorun="TRUE"/>

  <makefile target="ap">
    <!-- Include the needed Computer Vision files -->
    <define name="modules/computer_vision" type="include"/>
    <file name="image.c" dir="modules/computer_vision/lib/vision"/>
    <file name="jpeg.c" dir="modules/computer_vision/lib/encoding"/>
    <file name="rtp.c" dir="modules/computer_vision/lib/encoding"/>
    <file name="v4l2.c" dir="modules/computer_vision/lib/v4l"/>

    <!-- The optical flow module (calculator+stabilization) -->
    <file name="opticflow_module.c"/>
    <file name="opticflow_calculator.c" dir="modules/computer_vision/opticflow"/>
    <file name="landing_DivPilot.c" dir="modules/computer_vision/opticflow"/>

    <!-- Main vision calculations -->
    <file name="fast_rosten.c" dir="modules/computer_vision/lib/vision"/>
    <file name="lucas_kanade.c" dir="modules/computer_vision/lib/vision"/>
    <file name="opticflow_fitting.c" dir="modules/computer_vision/lib/vision"/>
    <raw>
      VIEWVIDEO_HOST        ?= $(MODEM_HOST)
      VIEWVIDEO_PORT_OUT    ?= 5000
      VIEWVIDEO_BROADCAST   ?= $(MODEM_BROADCAST)

      VIEWVID_CFLAGS  = -DVIEWVIDEO_HOST=$(VIEWVIDEO_HOST) -DVIEWVIDEO_PORT_OUT=$(VIEWVIDEO_PORT_OUT)
      ifeq ($(VIEWVIDEO_USE_NC),)
        ap.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_BROADCAST=$(VIEWVIDEO_BROADCAST)
      else
        ap.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_USE_NC
      endif

      ap.CFLAGS += -DGUIDANCE_V_MODE_MODULE_SETTING=GUIDANCE_V_MODE_MODULE
      ap.CFLAGS += -DGUIDANCE_H_MODE_MODULE_SETTING=GUIDANCE_H_MODE_HOVER
    </raw>
  </makefile>

  <makefile target="nps">
    <file name="viewvideo_nps.c"/>
  </makefile>

</module>

